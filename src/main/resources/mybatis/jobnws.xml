<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.jobnws.JobnwsDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.jobnws.JobnwsDAOInter"> 
 <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체의 타입
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: ? 동일
  #{name}: public String getName() 자동 호출
   -->
    <insert id="create" parameterType="JobnwsVO">
      INSERT INTO jobnws(jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_passwd, jobnws_date, jobnws_file1, jobnws_thumb1, jobnws_size1)
      VALUES(jobnws_seq.nextval, #{adminno}, #{jobnws_title}, #{jobnws_content}, #{jobnws_url}, #{jobnws_passwd}, sysdate, #{jobnws_file1}, #{jobnws_thumb1}, #{jobnws_size1})
    </insert>
   
    <select id="list_jobnwsno_asc" resultType="JobnwsVO">
      SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt,  jobnws_date, jobnws_file1, jobnws_thumb1, jobnws_size1
      FROM jobnws
      ORDER BY jobnwsno ASC
    </select>
    
     
   <!-- 검색 레코드 갯수 -->
   <select id="search_count" resultType="int" parameterType="HashMap">
     SELECT COUNT(*) as cnt
     FROM jobnws
     <choose>
       <when test="jobnws_title == null or jobnws_title == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
       </when>
       <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
         WHERE jobnws_title LIKE '%' || #{jobnws_title} || '%'
       </otherwise>
     </choose>
   </select>
   
   
   <!-- 페이징 + 메인 이미지 + 검색-->   
   <select id="list_by_jobnwsno_search_paging" 
              resultType="JobnwsVO" parameterType="HashMap">
     SELECT  jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt, jobnws_passwd, jobnws_date, jobnws_file1,
                 jobnws_thumb1, jobnws_size1, r
     FROM (
                SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt, jobnws_passwd, jobnws_date, jobnws_file1,
                           jobnws_thumb1, jobnws_size1, rownum as r
                FROM (
                          SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt, jobnws_passwd, jobnws_date, jobnws_file1,
                                     jobnws_thumb1, jobnws_size1
                          FROM jobnws
                          <choose>
                            <when test="jobnws_title == null or jobnws_title == ''"> <!-- 검색하지 않는 경우 -->
                            </when>
                            <otherwise>
                              WHERE jobnws_title LIKE '%' || #{jobnws_title} || '%'
                            </otherwise>
                          </choose>
                          
                )
     )
     WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]>
     <!-- 
       1 page: WHERE r >= 1 AND r <= 10; 
       2 page: WHERE r >= 11 AND r <= 20;
       3 page: WHERE r >= 21 AND r <= 30;
      -->
   </select> 
   
     <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지  -->
     <select id="list_by_jobnwsno_search_paging_join" resultType="Jobnws_AdminVO" parameterType="HashMap"> 
      SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt, jobnws_date, jobnws_file1,
      jobnws_thumb1, jobnws_size1, aid, r      
      FROM (
                 SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt, jobnws_date, jobnws_file1,
                           jobnws_thumb1, jobnws_size1, aid, rownum as r
                 FROM (
                           SELECT  c.jobnwsno, c.adminno, c.jobnws_title, c.jobnws_content, c.jobnws_url, c.jobnws_cnt, c.jobnws_date, c.jobnws_file1,
                           c.jobnws_thumb1, c.jobnws_size1, a.id as aid
                           FROM jobnws c, admin a
                          <choose>
                            <when test="jobnws_title == null or jobnws_title == ''"> <!-- 검색하지 않는 경우 -->
                            </when>
                            <otherwise>
                             WHERE c.adminno = a.adminno
                              AND  jobnws_title LIKE '%' || #{jobnws_title} || '%'  
                            </otherwise>
                          </choose>
                           ORDER BY jobnwsno DESC
                 )          
      )
       WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]>
    </select>      
       
    <!-- 조회, id: read, 입력: jobnwsno, 리턴: JobnwsVO -->
    <select id="read" resultType="JobnwsVO" parameterType="int">
      SELECT jobnwsno, adminno, jobnws_title, jobnws_content, jobnws_url, jobnws_cnt,  jobnws_date, jobnws_file1, jobnws_thumb1, jobnws_size1
      FROM jobnws
      WHERE jobnwsno= #{jobnwsno}
    </select>
    
    <!--수정 처리, id: update, 입력: JobnwsVO  -->
    <update id="update" parameterType="JobnwsVO">
     UPDATE jobnws
     SET jobnws_title=#{jobnws_title}, jobnws_content=#{jobnws_content}, jobnws_url=#{jobnws_url}
     WHERE jobnwsno = #{jobnwsno}
    </update>
    
    <!-- 삭제, id: delete,  입력: jobnwsno -->
    <delete id="delete" parameterType="int">
      DELETE FROM jobnws
      WHERE jobnwsno = #{jobnwsno}
    </delete>
    
   <select id = "jobnws_passwd_check" parameterType="HashMap" resultType="int">
     SELECT COUNT(*) as jobnws_passwd_cnt
     FROM jobnws
     WHERE jobnwsno=#{jobnwsno} AND jobnws_passwd=#{jobnws_passwd}
   </select>
   
   <update id="increaseCnt" parameterType="int">
     UPDATE jobnws
     SET jobnws_cnt = jobnws_cnt + 1 
     WHERE jobnwsno = #{jobnwsno}
   </update>
   
   <!-- 첨부 파일 메인 이미지 변경 -->
   <update id="update_img" parameterType="JobnwsVO">
     UPDATE jobnws
     SET jobnws_file1=#{jobnws_file1}, jobnws_thumb1=#{jobnws_thumb1}, jobnws_size1=#{jobnws_size1}
     WHERE jobnwsno=#{jobnwsno} 
   </update>
  
  
    
       
</mapper>
 