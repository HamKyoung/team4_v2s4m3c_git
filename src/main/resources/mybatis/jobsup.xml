<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- dev.mvc.jobnws.JobnwsDAOInter 패키지에 등록된 interface 명시, 패키지명과 인터페이스명은 실제로 
  존재해야함, Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.jobsup.JobsupDAOInter">
  <!-- insert: INSERT SQL 실행 id: Spring에서 호출시 사용 parameterType: 전달받는 데이터 
    객체의 타입 return: 등록한 레코드 갯수 리턴 SQL선언시 ';'은 삭제 #{}: ? 동일 #{name}: public String 
    getName() 자동 호출 -->
  <insert id="create" parameterType="JobsupVO">
    INSERT INTO jobsup(jobsupno, comno, recruitno, gen_memberno, res_no, jobsup_title, jobsup_msg, jobsup_date)
    VALUES(jobsup_seq.nextval,  #{comno}, #{recruitno}, #{gen_memberno},  #{res_no}, #{jobsup_title}, #{jobsup_msg}, sysdate)
  </insert>

  <select id="list_jobsupno_asc" resultType="JobsupVO">
    SELECT jobsupno, comno, recruitno, gen_memberno, res_no, jobsup_title, jobsup_msg, jobsup_date
    FROM jobsup
    ORDER BY jobsupno ASC
  </select>

  <!-- 조회, id: read, 입력: jobsupno, 리턴: JobsupVO -->
  <select id="read" resultType="JobsupVO" parameterType="int">
    SELECT jobsupno, comno, recruitno, gen_memberno, res_no, jobsup_title, jobsup_msg, jobsup_date
    FROM jobsup
    WHERE jobsupno = #{jobsupno}
  </select>
  
  <!--수정 처리, id: update, 입력: JobsupVO  -->
  <update id="update" parameterType="JobsupVO">
    UPDATE jobsup
    SET jobsup_title=#{jobsup_title}, jobsup_msg=#{jobsup_msg}
    WHERE jobsupno = #{jobsupno}
  </update>
  
  <!-- 삭제, id: delete,  입력: jobnwsno -->
  <delete id="delete" parameterType="int">
      DELETE FROM jobsup
      WHERE jobsupno = #{jobsupno}
  </delete>

</mapper>
 