<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.notice.NoticeDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.notice.NoticeDAOInter">
  <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체의 타입
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: ? 동일
  #{name}: public String getName() 자동 호출
   --> 
   
  <!-- 등록 -->
  <insert id="create" parameterType="NoticeVO">
    INSERT INTO notice(notice_no, notice_name, notice_con, notice_date, notice_file1, notice_thumb1, notice_size1, notice_word)
    VALUES(notice_seq.nextval, #{notice_name}, #{notice_con}, sysdate, #{notice_file1}, #{notice_thumb1}, #{notice_size1}, #{notice_word})
  </insert> 

  <!-- notice_seqno 기준 목록 -->  
<!--   <select id="list_notice_seqno_asc" resultType="NoticeVO">
    SELECT notice_no, notice_name, notice_con, notice_seqno, notice_views, notice_visible, notice_date
    FROM notice
    ORDER BY notice_seqno ASC
  </select> -->
  
   <!-- 검색 레코드 갯수 -->
   <select id="search_count" resultType="int" parameterType="HashMap">
     SELECT COUNT(*) as cnt
     FROM notice
     <choose>
       <when test="notice_word == null or notice_word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
       </when>
       <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
         WHERE notice_word LIKE '%' || #{notice_word} || '%'
       </otherwise>
     </choose>
   </select>  
  
   <!-- 페이징 + 메인 이미지 + 검색-->   
   <select id="list_notice_seqno_asc" resultType="NoticeVO" parameterType="HashMap">
   
      SELECT notice_no, notice_name, notice_con, notice_seqno, notice_views, notice_visible, notice_date, r
      FROM (
                 SELECT notice_no, notice_name, notice_con, notice_seqno, notice_views, notice_visible, notice_date, rownum as r
                 FROM (
                           SELECT notice_no, notice_name, notice_con, notice_seqno, notice_views, notice_visible, notice_date
                           FROM notice
                          <choose>
                            <when test="notice_word == null or notice_word == ''"> <!-- 검색하지 않는 경우 -->
                            </when>
                            <otherwise>
                              WHERE notice_word LIKE '%' || #{notice_word} || '%'
                            </otherwise>
                          </choose>
                          ORDER BY notice_no DESC
                 )          
      )
     WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]>
     <!-- 
       1 page: WHERE r >= 1 AND r <= 10; 
       2 page: WHERE r >= 11 AND r <= 20;
       3 page: WHERE r >= 21 AND r <= 30;
      -->
   </select> 
  
  <!-- 우선순위 상향 up 10 ▷ 1 -->
  <update id="update_seqno_up" parameterType="int">
    UPDATE notice
    SET notice_seqno = notice_seqno - 1
    WHERE notice_no = #{notice_no}
  </update>
  
  <!-- 우선순위 하향 down 1 ▷ 10 -->
  <update id="update_seqno_down" parameterType="int">
    UPDATE notice
    SET notice_seqno = notice_seqno + 1
    WHERE notice_no = #{notice_no}
  </update>
  
  <!-- 조회, 수정폼, 삭제폼, id: read, 입력: notice_no, 리턴: NoticeVO -->
  <select id="read" parameterType="int" resultType="NoticeVO">
    SELECT notice_no, notice_name, notice_con, notice_views, notice_visible, notice_date, notice_file1, notice_thumb1, notice_size1
    FROM notice
    WHERE notice_no=#{notice_no}
  </select>
  
  <!-- 수정, id: update, 입력: NoticeVO, 리턴: int -->
  <update id="update" parameterType="NoticeVO">
    UPDATE notice
    SET notice_name=#{notice_name}, notice_con = #{notice_con}, notice_file1= #{notice_file1}, notice_thumb1=#{notice_thumb1}, notice_size1=#{notice_size1}
    WHERE notice_no=#{notice_no}
  </update>
  
  <!-- 삭제, return: int -->
  <delete id="delete" parameterType="int">
    DELETE FROM notice
    WHERE notice_no=#{notice_no}
  </delete>   
  
  <!-- 수정, id: update_visible, 입력: NoticeVO, 리턴: int -->
  <update id="update_visible" parameterType="NoticeVO">
    UPDATE notice
    SET notice_visible=#{notice_visible}
    WHERE notice_no=#{notice_no}
  </update>
  
  <!-- 이미지 변경 -->
  <update id="update_img" parameterType="NoticeVO">
    UPDATE notice
    SET notice_file1=#{notice_file1}, notice_thumb1=#{notice_thumb1}, notice_size1=#{notice_size1}
    WHERE notice_no=#{notice_no}
  </update>
  

 
</mapper>



